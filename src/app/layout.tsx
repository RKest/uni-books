import type {Metadata} from "next";
import {Geist, Geist_Mono} from "next/font/google";
import "./globals.css";
import {redirect} from "next/navigation";
import {headers} from "next/headers";
import {getCurrentSession} from "@/app/auth/session";
import LougoutButton from "@/app/auth/logoutButton";
import Link from "next/link";

const geistSans = Geist({
    variable: "--font-geist-sans",
    subsets: ["latin"],
});

const geistMono = Geist_Mono({
    variable: "--font-geist-mono",
    subsets: ["latin"],
});

export const metadata: Metadata = {
    title: "Create Next App",
    description: "Generated by create next app",
};

const AUTH_ROUTES = ["/auth/login", "/auth/register"];

export default async function RootLayout({
                                             children,
                                         }: Readonly<{
    children: React.ReactNode;
}>) {
    const path = (await headers()).get("next-url") || "";
    const {session, user} = await getCurrentSession();
    const onAuthPage = AUTH_ROUTES.some((p) => path.indexOf(p) !== -1);

    if (!onAuthPage && (!session || !user)) {
        redirect("/auth/login");
    }

    return (
        <html lang="en">
        <body
            className={`${geistSans.variable} ${geistMono.variable} antialiased `}
        >
        {!onAuthPage && (
            <header className="sticky top-0 z-50 bg-white shadow-md border-b border-gray-200">
                <div className="container mx-auto px-6 py-4 flex justify-between items-center">
                    <Link href="/" className="text-2xl font-bold text-gray-800 hover:text-blue-600 transition-colors">
                        ðŸ“˜ Library
                    </Link>
                    <div className="flex items-center gap-4">
                        <p className="text-gray-700 text-base">
                            Hello, <span className="font-semibold">{user?.username}</span>
                        </p>
                        <LougoutButton/>
                    </div>
                </div>
            </header>
        )}
        {children}
        </body>
        </html>
    );
}
